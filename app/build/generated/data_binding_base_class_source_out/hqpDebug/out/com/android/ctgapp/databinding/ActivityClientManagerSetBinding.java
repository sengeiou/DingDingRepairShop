// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import com.android.ctgapp.widget.CustomTitleBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityClientManagerSetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout mBottomButtonLL;

  @NonNull
  public final RecyclerView mPersonRV;

  @NonNull
  public final Button mSaveBTN;

  @NonNull
  public final CustomTitleBar mTitleBar;

  private ActivityClientManagerSetBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout mBottomButtonLL, @NonNull RecyclerView mPersonRV,
      @NonNull Button mSaveBTN, @NonNull CustomTitleBar mTitleBar) {
    this.rootView = rootView;
    this.mBottomButtonLL = mBottomButtonLL;
    this.mPersonRV = mPersonRV;
    this.mSaveBTN = mSaveBTN;
    this.mTitleBar = mTitleBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityClientManagerSetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityClientManagerSetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_client_manager_set, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityClientManagerSetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mBottomButtonLL;
      RelativeLayout mBottomButtonLL = rootView.findViewById(id);
      if (mBottomButtonLL == null) {
        break missingId;
      }

      id = R.id.mPersonRV;
      RecyclerView mPersonRV = rootView.findViewById(id);
      if (mPersonRV == null) {
        break missingId;
      }

      id = R.id.mSaveBTN;
      Button mSaveBTN = rootView.findViewById(id);
      if (mSaveBTN == null) {
        break missingId;
      }

      id = R.id.mTitleBar;
      CustomTitleBar mTitleBar = rootView.findViewById(id);
      if (mTitleBar == null) {
        break missingId;
      }

      return new ActivityClientManagerSetBinding((RelativeLayout) rootView, mBottomButtonLL,
          mPersonRV, mSaveBTN, mTitleBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
