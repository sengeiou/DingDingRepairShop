// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemUnaddContactsListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout mCardParentLL;

  @NonNull
  public final ImageView mEditTV;

  @NonNull
  public final TextView mPhoneNumTV;

  @NonNull
  public final CircleImageView mUserImageIV;

  @NonNull
  public final TextView mUserImageTextIV;

  @NonNull
  public final TextView mUserNameTV;

  private ItemUnaddContactsListBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout mCardParentLL, @NonNull ImageView mEditTV,
      @NonNull TextView mPhoneNumTV, @NonNull CircleImageView mUserImageIV,
      @NonNull TextView mUserImageTextIV, @NonNull TextView mUserNameTV) {
    this.rootView = rootView;
    this.mCardParentLL = mCardParentLL;
    this.mEditTV = mEditTV;
    this.mPhoneNumTV = mPhoneNumTV;
    this.mUserImageIV = mUserImageIV;
    this.mUserImageTextIV = mUserImageTextIV;
    this.mUserNameTV = mUserNameTV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemUnaddContactsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemUnaddContactsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_unadd_contacts_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemUnaddContactsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mCardParentLL;
      LinearLayout mCardParentLL = rootView.findViewById(id);
      if (mCardParentLL == null) {
        break missingId;
      }

      id = R.id.mEditTV;
      ImageView mEditTV = rootView.findViewById(id);
      if (mEditTV == null) {
        break missingId;
      }

      id = R.id.mPhoneNumTV;
      TextView mPhoneNumTV = rootView.findViewById(id);
      if (mPhoneNumTV == null) {
        break missingId;
      }

      id = R.id.mUserImageIV;
      CircleImageView mUserImageIV = rootView.findViewById(id);
      if (mUserImageIV == null) {
        break missingId;
      }

      id = R.id.mUserImageTextIV;
      TextView mUserImageTextIV = rootView.findViewById(id);
      if (mUserImageTextIV == null) {
        break missingId;
      }

      id = R.id.mUserNameTV;
      TextView mUserNameTV = rootView.findViewById(id);
      if (mUserNameTV == null) {
        break missingId;
      }

      return new ItemUnaddContactsListBinding((LinearLayout) rootView, mCardParentLL, mEditTV,
          mPhoneNumTV, mUserImageIV, mUserImageTextIV, mUserNameTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
