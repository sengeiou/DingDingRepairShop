// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReturnReasonBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button mConfirmBTN;

  @NonNull
  public final RadioGroup mGroup;

  @NonNull
  public final RadioButton mRB1;

  @NonNull
  public final RadioButton mRB2;

  @NonNull
  public final RadioButton mRB3;

  @NonNull
  public final RadioButton mRB4;

  private ItemReturnReasonBinding(@NonNull LinearLayout rootView, @NonNull Button mConfirmBTN,
      @NonNull RadioGroup mGroup, @NonNull RadioButton mRB1, @NonNull RadioButton mRB2,
      @NonNull RadioButton mRB3, @NonNull RadioButton mRB4) {
    this.rootView = rootView;
    this.mConfirmBTN = mConfirmBTN;
    this.mGroup = mGroup;
    this.mRB1 = mRB1;
    this.mRB2 = mRB2;
    this.mRB3 = mRB3;
    this.mRB4 = mRB4;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReturnReasonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReturnReasonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_return_reason, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReturnReasonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mConfirmBTN;
      Button mConfirmBTN = rootView.findViewById(id);
      if (mConfirmBTN == null) {
        break missingId;
      }

      id = R.id.mGroup;
      RadioGroup mGroup = rootView.findViewById(id);
      if (mGroup == null) {
        break missingId;
      }

      id = R.id.mRB1;
      RadioButton mRB1 = rootView.findViewById(id);
      if (mRB1 == null) {
        break missingId;
      }

      id = R.id.mRB2;
      RadioButton mRB2 = rootView.findViewById(id);
      if (mRB2 == null) {
        break missingId;
      }

      id = R.id.mRB3;
      RadioButton mRB3 = rootView.findViewById(id);
      if (mRB3 == null) {
        break missingId;
      }

      id = R.id.mRB4;
      RadioButton mRB4 = rootView.findViewById(id);
      if (mRB4 == null) {
        break missingId;
      }

      return new ItemReturnReasonBinding((LinearLayout) rootView, mConfirmBTN, mGroup, mRB1, mRB2,
          mRB3, mRB4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
