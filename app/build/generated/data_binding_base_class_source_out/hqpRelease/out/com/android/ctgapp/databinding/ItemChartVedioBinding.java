// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemChartVedioBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout mChartContentLL;

  @NonNull
  public final LinearLayout mChartTextParentLL;

  @NonNull
  public final TextView mChartTimeTV;

  @NonNull
  public final ImageView mErrorIV;

  @NonNull
  public final CardView mHeaderLeftCV;

  @NonNull
  public final ImageView mHeaderLeftIV;

  @NonNull
  public final CardView mHeaderRightCV;

  @NonNull
  public final ImageView mHeaderRightIV;

  @NonNull
  public final TextView mIsRedTV;

  @NonNull
  public final TextView mVideoTimeTV;

  @NonNull
  public final ImageView mVideoVV;

  private ItemChartVedioBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout mChartContentLL, @NonNull LinearLayout mChartTextParentLL,
      @NonNull TextView mChartTimeTV, @NonNull ImageView mErrorIV, @NonNull CardView mHeaderLeftCV,
      @NonNull ImageView mHeaderLeftIV, @NonNull CardView mHeaderRightCV,
      @NonNull ImageView mHeaderRightIV, @NonNull TextView mIsRedTV, @NonNull TextView mVideoTimeTV,
      @NonNull ImageView mVideoVV) {
    this.rootView = rootView;
    this.mChartContentLL = mChartContentLL;
    this.mChartTextParentLL = mChartTextParentLL;
    this.mChartTimeTV = mChartTimeTV;
    this.mErrorIV = mErrorIV;
    this.mHeaderLeftCV = mHeaderLeftCV;
    this.mHeaderLeftIV = mHeaderLeftIV;
    this.mHeaderRightCV = mHeaderRightCV;
    this.mHeaderRightIV = mHeaderRightIV;
    this.mIsRedTV = mIsRedTV;
    this.mVideoTimeTV = mVideoTimeTV;
    this.mVideoVV = mVideoVV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemChartVedioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemChartVedioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_chart_vedio, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemChartVedioBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mChartContentLL;
      LinearLayout mChartContentLL = rootView.findViewById(id);
      if (mChartContentLL == null) {
        break missingId;
      }

      LinearLayout mChartTextParentLL = (LinearLayout) rootView;

      id = R.id.mChartTimeTV;
      TextView mChartTimeTV = rootView.findViewById(id);
      if (mChartTimeTV == null) {
        break missingId;
      }

      id = R.id.mErrorIV;
      ImageView mErrorIV = rootView.findViewById(id);
      if (mErrorIV == null) {
        break missingId;
      }

      id = R.id.mHeaderLeftCV;
      CardView mHeaderLeftCV = rootView.findViewById(id);
      if (mHeaderLeftCV == null) {
        break missingId;
      }

      id = R.id.mHeaderLeftIV;
      ImageView mHeaderLeftIV = rootView.findViewById(id);
      if (mHeaderLeftIV == null) {
        break missingId;
      }

      id = R.id.mHeaderRightCV;
      CardView mHeaderRightCV = rootView.findViewById(id);
      if (mHeaderRightCV == null) {
        break missingId;
      }

      id = R.id.mHeaderRightIV;
      ImageView mHeaderRightIV = rootView.findViewById(id);
      if (mHeaderRightIV == null) {
        break missingId;
      }

      id = R.id.mIsRedTV;
      TextView mIsRedTV = rootView.findViewById(id);
      if (mIsRedTV == null) {
        break missingId;
      }

      id = R.id.mVideoTimeTV;
      TextView mVideoTimeTV = rootView.findViewById(id);
      if (mVideoTimeTV == null) {
        break missingId;
      }

      id = R.id.mVideoVV;
      ImageView mVideoVV = rootView.findViewById(id);
      if (mVideoVV == null) {
        break missingId;
      }

      return new ItemChartVedioBinding((LinearLayout) rootView, mChartContentLL, mChartTextParentLL,
          mChartTimeTV, mErrorIV, mHeaderLeftCV, mHeaderLeftIV, mHeaderRightCV, mHeaderRightIV,
          mIsRedTV, mVideoTimeTV, mVideoVV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
