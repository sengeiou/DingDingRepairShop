// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCheckstandBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox mAliPayCB;

  @NonNull
  public final LinearLayout mAliPayLL;

  @NonNull
  public final LinearLayout mCardPayLL;

  @NonNull
  public final Switch mCardPaySW;

  @NonNull
  public final TextView mCardPayTV;

  @NonNull
  public final Button mConfirmPayBTN;

  @NonNull
  public final CheckBox mCreditPayCB;

  @NonNull
  public final LinearLayout mCreditPayLL;

  @NonNull
  public final RelativeLayout mPayButtonRL;

  @NonNull
  public final LinearLayout mTimeCountLL;

  @NonNull
  public final TextView mTimeCountTV;

  @NonNull
  public final TextView mTotalPriceTV;

  @NonNull
  public final CheckBox mWeChatCB;

  @NonNull
  public final LinearLayout mWeChatLL;

  @NonNull
  public final TextView mWhiteBarTV;

  private ActivityCheckstandBinding(@NonNull LinearLayout rootView, @NonNull CheckBox mAliPayCB,
      @NonNull LinearLayout mAliPayLL, @NonNull LinearLayout mCardPayLL, @NonNull Switch mCardPaySW,
      @NonNull TextView mCardPayTV, @NonNull Button mConfirmPayBTN, @NonNull CheckBox mCreditPayCB,
      @NonNull LinearLayout mCreditPayLL, @NonNull RelativeLayout mPayButtonRL,
      @NonNull LinearLayout mTimeCountLL, @NonNull TextView mTimeCountTV,
      @NonNull TextView mTotalPriceTV, @NonNull CheckBox mWeChatCB, @NonNull LinearLayout mWeChatLL,
      @NonNull TextView mWhiteBarTV) {
    this.rootView = rootView;
    this.mAliPayCB = mAliPayCB;
    this.mAliPayLL = mAliPayLL;
    this.mCardPayLL = mCardPayLL;
    this.mCardPaySW = mCardPaySW;
    this.mCardPayTV = mCardPayTV;
    this.mConfirmPayBTN = mConfirmPayBTN;
    this.mCreditPayCB = mCreditPayCB;
    this.mCreditPayLL = mCreditPayLL;
    this.mPayButtonRL = mPayButtonRL;
    this.mTimeCountLL = mTimeCountLL;
    this.mTimeCountTV = mTimeCountTV;
    this.mTotalPriceTV = mTotalPriceTV;
    this.mWeChatCB = mWeChatCB;
    this.mWeChatLL = mWeChatLL;
    this.mWhiteBarTV = mWhiteBarTV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCheckstandBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCheckstandBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_checkstand, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCheckstandBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mAliPayCB;
      CheckBox mAliPayCB = rootView.findViewById(id);
      if (mAliPayCB == null) {
        break missingId;
      }

      id = R.id.mAliPayLL;
      LinearLayout mAliPayLL = rootView.findViewById(id);
      if (mAliPayLL == null) {
        break missingId;
      }

      id = R.id.mCardPayLL;
      LinearLayout mCardPayLL = rootView.findViewById(id);
      if (mCardPayLL == null) {
        break missingId;
      }

      id = R.id.mCardPaySW;
      Switch mCardPaySW = rootView.findViewById(id);
      if (mCardPaySW == null) {
        break missingId;
      }

      id = R.id.mCardPayTV;
      TextView mCardPayTV = rootView.findViewById(id);
      if (mCardPayTV == null) {
        break missingId;
      }

      id = R.id.mConfirmPayBTN;
      Button mConfirmPayBTN = rootView.findViewById(id);
      if (mConfirmPayBTN == null) {
        break missingId;
      }

      id = R.id.mCreditPayCB;
      CheckBox mCreditPayCB = rootView.findViewById(id);
      if (mCreditPayCB == null) {
        break missingId;
      }

      id = R.id.mCreditPayLL;
      LinearLayout mCreditPayLL = rootView.findViewById(id);
      if (mCreditPayLL == null) {
        break missingId;
      }

      id = R.id.mPayButtonRL;
      RelativeLayout mPayButtonRL = rootView.findViewById(id);
      if (mPayButtonRL == null) {
        break missingId;
      }

      id = R.id.mTimeCountLL;
      LinearLayout mTimeCountLL = rootView.findViewById(id);
      if (mTimeCountLL == null) {
        break missingId;
      }

      id = R.id.mTimeCountTV;
      TextView mTimeCountTV = rootView.findViewById(id);
      if (mTimeCountTV == null) {
        break missingId;
      }

      id = R.id.mTotalPriceTV;
      TextView mTotalPriceTV = rootView.findViewById(id);
      if (mTotalPriceTV == null) {
        break missingId;
      }

      id = R.id.mWeChatCB;
      CheckBox mWeChatCB = rootView.findViewById(id);
      if (mWeChatCB == null) {
        break missingId;
      }

      id = R.id.mWeChatLL;
      LinearLayout mWeChatLL = rootView.findViewById(id);
      if (mWeChatLL == null) {
        break missingId;
      }

      id = R.id.mWhiteBarTV;
      TextView mWhiteBarTV = rootView.findViewById(id);
      if (mWhiteBarTV == null) {
        break missingId;
      }

      return new ActivityCheckstandBinding((LinearLayout) rootView, mAliPayCB, mAliPayLL,
          mCardPayLL, mCardPaySW, mCardPayTV, mConfirmPayBTN, mCreditPayCB, mCreditPayLL,
          mPayButtonRL, mTimeCountLL, mTimeCountTV, mTotalPriceTV, mWeChatCB, mWeChatLL,
          mWhiteBarTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
