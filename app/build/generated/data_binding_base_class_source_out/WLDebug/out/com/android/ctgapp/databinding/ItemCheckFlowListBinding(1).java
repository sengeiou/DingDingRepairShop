// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCheckFlowListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView mCompanyNameTV;

  @NonNull
  public final TextView mFromTV;

  @NonNull
  public final TextView mMoneyTV;

  @NonNull
  public final TextView mOrderTV;

  @NonNull
  public final TextView mTimeTV;

  private ItemCheckFlowListBinding(@NonNull LinearLayout rootView, @NonNull TextView mCompanyNameTV,
      @NonNull TextView mFromTV, @NonNull TextView mMoneyTV, @NonNull TextView mOrderTV,
      @NonNull TextView mTimeTV) {
    this.rootView = rootView;
    this.mCompanyNameTV = mCompanyNameTV;
    this.mFromTV = mFromTV;
    this.mMoneyTV = mMoneyTV;
    this.mOrderTV = mOrderTV;
    this.mTimeTV = mTimeTV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCheckFlowListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCheckFlowListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_check_flow_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCheckFlowListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mCompanyNameTV;
      TextView mCompanyNameTV = rootView.findViewById(id);
      if (mCompanyNameTV == null) {
        break missingId;
      }

      id = R.id.mFromTV;
      TextView mFromTV = rootView.findViewById(id);
      if (mFromTV == null) {
        break missingId;
      }

      id = R.id.mMoneyTV;
      TextView mMoneyTV = rootView.findViewById(id);
      if (mMoneyTV == null) {
        break missingId;
      }

      id = R.id.mOrderTV;
      TextView mOrderTV = rootView.findViewById(id);
      if (mOrderTV == null) {
        break missingId;
      }

      id = R.id.mTimeTV;
      TextView mTimeTV = rootView.findViewById(id);
      if (mTimeTV == null) {
        break missingId;
      }

      return new ItemCheckFlowListBinding((LinearLayout) rootView, mCompanyNameTV, mFromTV,
          mMoneyTV, mOrderTV, mTimeTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
