// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEnquireOrderConfirmItemListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView YJDH;

  @NonNull
  public final TextView mBrandTV;

  @NonNull
  public final TextView mContentTV;

  @NonNull
  public final LinearLayout mParentLL;

  @NonNull
  public final TextView mPartNamesTV;

  @NonNull
  public final TextView mPriceTV;

  private ItemEnquireOrderConfirmItemListBinding(@NonNull LinearLayout rootView,
      @NonNull TextView YJDH, @NonNull TextView mBrandTV, @NonNull TextView mContentTV,
      @NonNull LinearLayout mParentLL, @NonNull TextView mPartNamesTV, @NonNull TextView mPriceTV) {
    this.rootView = rootView;
    this.YJDH = YJDH;
    this.mBrandTV = mBrandTV;
    this.mContentTV = mContentTV;
    this.mParentLL = mParentLL;
    this.mPartNamesTV = mPartNamesTV;
    this.mPriceTV = mPriceTV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEnquireOrderConfirmItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEnquireOrderConfirmItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_enquire_order_confirm_item_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEnquireOrderConfirmItemListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.YJDH;
      TextView YJDH = rootView.findViewById(id);
      if (YJDH == null) {
        break missingId;
      }

      id = R.id.mBrandTV;
      TextView mBrandTV = rootView.findViewById(id);
      if (mBrandTV == null) {
        break missingId;
      }

      id = R.id.mContentTV;
      TextView mContentTV = rootView.findViewById(id);
      if (mContentTV == null) {
        break missingId;
      }

      LinearLayout mParentLL = (LinearLayout) rootView;

      id = R.id.mPartNamesTV;
      TextView mPartNamesTV = rootView.findViewById(id);
      if (mPartNamesTV == null) {
        break missingId;
      }

      id = R.id.mPriceTV;
      TextView mPriceTV = rootView.findViewById(id);
      if (mPriceTV == null) {
        break missingId;
      }

      return new ItemEnquireOrderConfirmItemListBinding((LinearLayout) rootView, YJDH, mBrandTV,
          mContentTV, mParentLL, mPartNamesTV, mPriceTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
