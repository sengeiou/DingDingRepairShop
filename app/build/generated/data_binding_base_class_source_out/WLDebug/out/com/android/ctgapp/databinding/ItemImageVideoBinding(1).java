// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import cn.jzvd.JzvdStd;
import com.android.ctgapp.R;
import com.github.chrisbanes.photoview.PhotoView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemImageVideoBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final ImageView mBackIv;

  @NonNull
  public final PhotoView mPhotoImageIV;

  @NonNull
  public final TextView mTitleTv;

  @NonNull
  public final RelativeLayout mVideoRV;

  @NonNull
  public final JzvdStd mVideoView;

  private ItemImageVideoBinding(@NonNull LinearLayoutCompat rootView, @NonNull ImageView mBackIv,
      @NonNull PhotoView mPhotoImageIV, @NonNull TextView mTitleTv,
      @NonNull RelativeLayout mVideoRV, @NonNull JzvdStd mVideoView) {
    this.rootView = rootView;
    this.mBackIv = mBackIv;
    this.mPhotoImageIV = mPhotoImageIV;
    this.mTitleTv = mTitleTv;
    this.mVideoRV = mVideoRV;
    this.mVideoView = mVideoView;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemImageVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemImageVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_image_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemImageVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mBackIv;
      ImageView mBackIv = rootView.findViewById(id);
      if (mBackIv == null) {
        break missingId;
      }

      id = R.id.mPhotoImageIV;
      PhotoView mPhotoImageIV = rootView.findViewById(id);
      if (mPhotoImageIV == null) {
        break missingId;
      }

      id = R.id.mTitleTv;
      TextView mTitleTv = rootView.findViewById(id);
      if (mTitleTv == null) {
        break missingId;
      }

      id = R.id.mVideoRV;
      RelativeLayout mVideoRV = rootView.findViewById(id);
      if (mVideoRV == null) {
        break missingId;
      }

      id = R.id.mVideoView;
      JzvdStd mVideoView = rootView.findViewById(id);
      if (mVideoView == null) {
        break missingId;
      }

      return new ItemImageVideoBinding((LinearLayoutCompat) rootView, mBackIv, mPhotoImageIV,
          mTitleTv, mVideoRV, mVideoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
