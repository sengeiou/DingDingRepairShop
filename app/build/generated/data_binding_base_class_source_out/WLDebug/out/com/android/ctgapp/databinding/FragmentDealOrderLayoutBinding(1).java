// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import com.android.ctgapp.widget.SelectButton;
import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDealOrderLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SelectButton mAllBTN;

  @NonNull
  public final SelectButton mFinishedBTN;

  @NonNull
  public final RecyclerView mOrderRV;

  @NonNull
  public final SmartRefreshLayout mRefresh;

  @NonNull
  public final SelectButton mSalesReturnBTN;

  @NonNull
  public final SelectButton mWaitGetBTN;

  @NonNull
  public final SelectButton mWaitPayBTN;

  @NonNull
  public final SelectButton mWaitSendBTN;

  private FragmentDealOrderLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull SelectButton mAllBTN, @NonNull SelectButton mFinishedBTN,
      @NonNull RecyclerView mOrderRV, @NonNull SmartRefreshLayout mRefresh,
      @NonNull SelectButton mSalesReturnBTN, @NonNull SelectButton mWaitGetBTN,
      @NonNull SelectButton mWaitPayBTN, @NonNull SelectButton mWaitSendBTN) {
    this.rootView = rootView;
    this.mAllBTN = mAllBTN;
    this.mFinishedBTN = mFinishedBTN;
    this.mOrderRV = mOrderRV;
    this.mRefresh = mRefresh;
    this.mSalesReturnBTN = mSalesReturnBTN;
    this.mWaitGetBTN = mWaitGetBTN;
    this.mWaitPayBTN = mWaitPayBTN;
    this.mWaitSendBTN = mWaitSendBTN;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDealOrderLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDealOrderLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_deal_order_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDealOrderLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mAllBTN;
      SelectButton mAllBTN = rootView.findViewById(id);
      if (mAllBTN == null) {
        break missingId;
      }

      id = R.id.mFinishedBTN;
      SelectButton mFinishedBTN = rootView.findViewById(id);
      if (mFinishedBTN == null) {
        break missingId;
      }

      id = R.id.mOrderRV;
      RecyclerView mOrderRV = rootView.findViewById(id);
      if (mOrderRV == null) {
        break missingId;
      }

      id = R.id.mRefresh;
      SmartRefreshLayout mRefresh = rootView.findViewById(id);
      if (mRefresh == null) {
        break missingId;
      }

      id = R.id.mSalesReturnBTN;
      SelectButton mSalesReturnBTN = rootView.findViewById(id);
      if (mSalesReturnBTN == null) {
        break missingId;
      }

      id = R.id.mWaitGetBTN;
      SelectButton mWaitGetBTN = rootView.findViewById(id);
      if (mWaitGetBTN == null) {
        break missingId;
      }

      id = R.id.mWaitPayBTN;
      SelectButton mWaitPayBTN = rootView.findViewById(id);
      if (mWaitPayBTN == null) {
        break missingId;
      }

      id = R.id.mWaitSendBTN;
      SelectButton mWaitSendBTN = rootView.findViewById(id);
      if (mWaitSendBTN == null) {
        break missingId;
      }

      return new FragmentDealOrderLayoutBinding((LinearLayout) rootView, mAllBTN, mFinishedBTN,
          mOrderRV, mRefresh, mSalesReturnBTN, mWaitGetBTN, mWaitPayBTN, mWaitSendBTN);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
