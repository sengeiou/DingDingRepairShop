// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBatchAddPartDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView mCancelTV;

  @NonNull
  public final LinearLayout mLayout1;

  @NonNull
  public final LinearLayout mLayout101;

  @NonNull
  public final LinearLayout mLayout102;

  @NonNull
  public final LinearLayout mLayout2;

  private ItemBatchAddPartDialogBinding(@NonNull LinearLayout rootView, @NonNull TextView mCancelTV,
      @NonNull LinearLayout mLayout1, @NonNull LinearLayout mLayout101,
      @NonNull LinearLayout mLayout102, @NonNull LinearLayout mLayout2) {
    this.rootView = rootView;
    this.mCancelTV = mCancelTV;
    this.mLayout1 = mLayout1;
    this.mLayout101 = mLayout101;
    this.mLayout102 = mLayout102;
    this.mLayout2 = mLayout2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBatchAddPartDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBatchAddPartDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_batch_add_part_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBatchAddPartDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mCancelTV;
      TextView mCancelTV = rootView.findViewById(id);
      if (mCancelTV == null) {
        break missingId;
      }

      id = R.id.mLayout1;
      LinearLayout mLayout1 = rootView.findViewById(id);
      if (mLayout1 == null) {
        break missingId;
      }

      id = R.id.mLayout101;
      LinearLayout mLayout101 = rootView.findViewById(id);
      if (mLayout101 == null) {
        break missingId;
      }

      id = R.id.mLayout102;
      LinearLayout mLayout102 = rootView.findViewById(id);
      if (mLayout102 == null) {
        break missingId;
      }

      id = R.id.mLayout2;
      LinearLayout mLayout2 = rootView.findViewById(id);
      if (mLayout2 == null) {
        break missingId;
      }

      return new ItemBatchAddPartDialogBinding((LinearLayout) rootView, mCancelTV, mLayout1,
          mLayout101, mLayout102, mLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
