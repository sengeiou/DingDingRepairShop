// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReturnDetailShowListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView mImageView;

  @NonNull
  public final TextView mPartCountTV;

  @NonNull
  public final TextView mPartNameTV;

  @NonNull
  public final TextView mPartPriceTV;

  @NonNull
  public final TextView mPartTypeTV;

  private ItemReturnDetailShowListBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView mImageView, @NonNull TextView mPartCountTV, @NonNull TextView mPartNameTV,
      @NonNull TextView mPartPriceTV, @NonNull TextView mPartTypeTV) {
    this.rootView = rootView;
    this.mImageView = mImageView;
    this.mPartCountTV = mPartCountTV;
    this.mPartNameTV = mPartNameTV;
    this.mPartPriceTV = mPartPriceTV;
    this.mPartTypeTV = mPartTypeTV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReturnDetailShowListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReturnDetailShowListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_return_detail_show_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReturnDetailShowListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mImageView;
      ImageView mImageView = rootView.findViewById(id);
      if (mImageView == null) {
        break missingId;
      }

      id = R.id.mPartCountTV;
      TextView mPartCountTV = rootView.findViewById(id);
      if (mPartCountTV == null) {
        break missingId;
      }

      id = R.id.mPartNameTV;
      TextView mPartNameTV = rootView.findViewById(id);
      if (mPartNameTV == null) {
        break missingId;
      }

      id = R.id.mPartPriceTV;
      TextView mPartPriceTV = rootView.findViewById(id);
      if (mPartPriceTV == null) {
        break missingId;
      }

      id = R.id.mPartTypeTV;
      TextView mPartTypeTV = rootView.findViewById(id);
      if (mPartTypeTV == null) {
        break missingId;
      }

      return new ItemReturnDetailShowListBinding((LinearLayout) rootView, mImageView, mPartCountTV,
          mPartNameTV, mPartPriceTV, mPartTypeTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
