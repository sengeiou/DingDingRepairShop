// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPersonInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout mCertificationLL;

  @NonNull
  public final TextView mCertificationStatueTV;

  @NonNull
  public final EditText mExternalPositionET;

  @NonNull
  public final CircleImageView mImageView;

  @NonNull
  public final EditText mNicknameET;

  @NonNull
  public final Button mSaveBTN;

  private ActivityPersonInfoBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout mCertificationLL, @NonNull TextView mCertificationStatueTV,
      @NonNull EditText mExternalPositionET, @NonNull CircleImageView mImageView,
      @NonNull EditText mNicknameET, @NonNull Button mSaveBTN) {
    this.rootView = rootView;
    this.mCertificationLL = mCertificationLL;
    this.mCertificationStatueTV = mCertificationStatueTV;
    this.mExternalPositionET = mExternalPositionET;
    this.mImageView = mImageView;
    this.mNicknameET = mNicknameET;
    this.mSaveBTN = mSaveBTN;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPersonInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPersonInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_person_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPersonInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mCertificationLL;
      LinearLayout mCertificationLL = rootView.findViewById(id);
      if (mCertificationLL == null) {
        break missingId;
      }

      id = R.id.mCertificationStatueTV;
      TextView mCertificationStatueTV = rootView.findViewById(id);
      if (mCertificationStatueTV == null) {
        break missingId;
      }

      id = R.id.mExternalPositionET;
      EditText mExternalPositionET = rootView.findViewById(id);
      if (mExternalPositionET == null) {
        break missingId;
      }

      id = R.id.mImageView;
      CircleImageView mImageView = rootView.findViewById(id);
      if (mImageView == null) {
        break missingId;
      }

      id = R.id.mNicknameET;
      EditText mNicknameET = rootView.findViewById(id);
      if (mNicknameET == null) {
        break missingId;
      }

      id = R.id.mSaveBTN;
      Button mSaveBTN = rootView.findViewById(id);
      if (mSaveBTN == null) {
        break missingId;
      }

      return new ActivityPersonInfoBinding((LinearLayout) rootView, mCertificationLL,
          mCertificationStatueTV, mExternalPositionET, mImageView, mNicknameET, mSaveBTN);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
