// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGuidePageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout llLayout;

  @NonNull
  public final Button mGoBtn;

  @NonNull
  public final ImageView mPoint1;

  @NonNull
  public final ImageView mPoint2;

  @NonNull
  public final ImageView mPoint3;

  @NonNull
  public final ImageView mPoint4;

  @NonNull
  public final ViewPager mViewPage;

  private ActivityGuidePageBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout llLayout,
      @NonNull Button mGoBtn, @NonNull ImageView mPoint1, @NonNull ImageView mPoint2,
      @NonNull ImageView mPoint3, @NonNull ImageView mPoint4, @NonNull ViewPager mViewPage) {
    this.rootView = rootView;
    this.llLayout = llLayout;
    this.mGoBtn = mGoBtn;
    this.mPoint1 = mPoint1;
    this.mPoint2 = mPoint2;
    this.mPoint3 = mPoint3;
    this.mPoint4 = mPoint4;
    this.mViewPage = mViewPage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGuidePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGuidePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_guide_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGuidePageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_layout;
      LinearLayout llLayout = rootView.findViewById(id);
      if (llLayout == null) {
        break missingId;
      }

      id = R.id.mGoBtn;
      Button mGoBtn = rootView.findViewById(id);
      if (mGoBtn == null) {
        break missingId;
      }

      id = R.id.mPoint1;
      ImageView mPoint1 = rootView.findViewById(id);
      if (mPoint1 == null) {
        break missingId;
      }

      id = R.id.mPoint2;
      ImageView mPoint2 = rootView.findViewById(id);
      if (mPoint2 == null) {
        break missingId;
      }

      id = R.id.mPoint3;
      ImageView mPoint3 = rootView.findViewById(id);
      if (mPoint3 == null) {
        break missingId;
      }

      id = R.id.mPoint4;
      ImageView mPoint4 = rootView.findViewById(id);
      if (mPoint4 == null) {
        break missingId;
      }

      id = R.id.mViewPage;
      ViewPager mViewPage = rootView.findViewById(id);
      if (mViewPage == null) {
        break missingId;
      }

      return new ActivityGuidePageBinding((RelativeLayout) rootView, llLayout, mGoBtn, mPoint1,
          mPoint2, mPoint3, mPoint4, mViewPage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
