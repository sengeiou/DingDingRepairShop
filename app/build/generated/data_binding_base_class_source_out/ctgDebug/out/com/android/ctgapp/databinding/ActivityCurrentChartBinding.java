// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import com.ilike.voicerecorder.widget.VoiceRecorderView;
import com.view.MP3RecordView;
import com.yanzhenjie.recyclerview.SwipeRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCurrentChartBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView mAddIV;

  @NonNull
  public final ImageView mBackIV;

  @NonNull
  public final LinearLayout mBottomLL;

  @NonNull
  public final TextView mCardTV;

  @NonNull
  public final SwipeRecyclerView mChartRV;

  @NonNull
  public final TextView mCompanyNameTV;

  @NonNull
  public final EditText mET;

  @NonNull
  public final ImageView mFaceButton;

  @NonNull
  public final RecyclerView mFaceRV;

  @NonNull
  public final LinearLayout mFunctionLL;

  @NonNull
  public final TextView mFunctionOrderBTN;

  @NonNull
  public final TextView mOpenPhotoTV;

  @NonNull
  public final Button mSendTV;

  @NonNull
  public final TextView mTakePhotoTV;

  @NonNull
  public final TextView mTalkToNameTV;

  @NonNull
  public final RelativeLayout mTitleBarRL;

  @NonNull
  public final VoiceRecorderView mVoiceDialog;

  @NonNull
  public final ImageView mVoiceIconTV;

  @NonNull
  public final TextView mVoiceTV;

  @NonNull
  public final MP3RecordView viewRecord;

  private ActivityCurrentChartBinding(@NonNull RelativeLayout rootView, @NonNull ImageView mAddIV,
      @NonNull ImageView mBackIV, @NonNull LinearLayout mBottomLL, @NonNull TextView mCardTV,
      @NonNull SwipeRecyclerView mChartRV, @NonNull TextView mCompanyNameTV, @NonNull EditText mET,
      @NonNull ImageView mFaceButton, @NonNull RecyclerView mFaceRV,
      @NonNull LinearLayout mFunctionLL, @NonNull TextView mFunctionOrderBTN,
      @NonNull TextView mOpenPhotoTV, @NonNull Button mSendTV, @NonNull TextView mTakePhotoTV,
      @NonNull TextView mTalkToNameTV, @NonNull RelativeLayout mTitleBarRL,
      @NonNull VoiceRecorderView mVoiceDialog, @NonNull ImageView mVoiceIconTV,
      @NonNull TextView mVoiceTV, @NonNull MP3RecordView viewRecord) {
    this.rootView = rootView;
    this.mAddIV = mAddIV;
    this.mBackIV = mBackIV;
    this.mBottomLL = mBottomLL;
    this.mCardTV = mCardTV;
    this.mChartRV = mChartRV;
    this.mCompanyNameTV = mCompanyNameTV;
    this.mET = mET;
    this.mFaceButton = mFaceButton;
    this.mFaceRV = mFaceRV;
    this.mFunctionLL = mFunctionLL;
    this.mFunctionOrderBTN = mFunctionOrderBTN;
    this.mOpenPhotoTV = mOpenPhotoTV;
    this.mSendTV = mSendTV;
    this.mTakePhotoTV = mTakePhotoTV;
    this.mTalkToNameTV = mTalkToNameTV;
    this.mTitleBarRL = mTitleBarRL;
    this.mVoiceDialog = mVoiceDialog;
    this.mVoiceIconTV = mVoiceIconTV;
    this.mVoiceTV = mVoiceTV;
    this.viewRecord = viewRecord;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCurrentChartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCurrentChartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_current_chart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCurrentChartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mAddIV;
      ImageView mAddIV = rootView.findViewById(id);
      if (mAddIV == null) {
        break missingId;
      }

      id = R.id.mBackIV;
      ImageView mBackIV = rootView.findViewById(id);
      if (mBackIV == null) {
        break missingId;
      }

      id = R.id.mBottomLL;
      LinearLayout mBottomLL = rootView.findViewById(id);
      if (mBottomLL == null) {
        break missingId;
      }

      id = R.id.mCardTV;
      TextView mCardTV = rootView.findViewById(id);
      if (mCardTV == null) {
        break missingId;
      }

      id = R.id.mChartRV;
      SwipeRecyclerView mChartRV = rootView.findViewById(id);
      if (mChartRV == null) {
        break missingId;
      }

      id = R.id.mCompanyNameTV;
      TextView mCompanyNameTV = rootView.findViewById(id);
      if (mCompanyNameTV == null) {
        break missingId;
      }

      id = R.id.mET;
      EditText mET = rootView.findViewById(id);
      if (mET == null) {
        break missingId;
      }

      id = R.id.mFaceButton;
      ImageView mFaceButton = rootView.findViewById(id);
      if (mFaceButton == null) {
        break missingId;
      }

      id = R.id.mFaceRV;
      RecyclerView mFaceRV = rootView.findViewById(id);
      if (mFaceRV == null) {
        break missingId;
      }

      id = R.id.mFunctionLL;
      LinearLayout mFunctionLL = rootView.findViewById(id);
      if (mFunctionLL == null) {
        break missingId;
      }

      id = R.id.mFunctionOrderBTN;
      TextView mFunctionOrderBTN = rootView.findViewById(id);
      if (mFunctionOrderBTN == null) {
        break missingId;
      }

      id = R.id.mOpenPhotoTV;
      TextView mOpenPhotoTV = rootView.findViewById(id);
      if (mOpenPhotoTV == null) {
        break missingId;
      }

      id = R.id.mSendTV;
      Button mSendTV = rootView.findViewById(id);
      if (mSendTV == null) {
        break missingId;
      }

      id = R.id.mTakePhotoTV;
      TextView mTakePhotoTV = rootView.findViewById(id);
      if (mTakePhotoTV == null) {
        break missingId;
      }

      id = R.id.mTalkToNameTV;
      TextView mTalkToNameTV = rootView.findViewById(id);
      if (mTalkToNameTV == null) {
        break missingId;
      }

      id = R.id.mTitleBarRL;
      RelativeLayout mTitleBarRL = rootView.findViewById(id);
      if (mTitleBarRL == null) {
        break missingId;
      }

      id = R.id.mVoiceDialog;
      VoiceRecorderView mVoiceDialog = rootView.findViewById(id);
      if (mVoiceDialog == null) {
        break missingId;
      }

      id = R.id.mVoiceIconTV;
      ImageView mVoiceIconTV = rootView.findViewById(id);
      if (mVoiceIconTV == null) {
        break missingId;
      }

      id = R.id.mVoiceTV;
      TextView mVoiceTV = rootView.findViewById(id);
      if (mVoiceTV == null) {
        break missingId;
      }

      id = R.id.viewRecord;
      MP3RecordView viewRecord = rootView.findViewById(id);
      if (viewRecord == null) {
        break missingId;
      }

      return new ActivityCurrentChartBinding((RelativeLayout) rootView, mAddIV, mBackIV, mBottomLL,
          mCardTV, mChartRV, mCompanyNameTV, mET, mFaceButton, mFaceRV, mFunctionLL,
          mFunctionOrderBTN, mOpenPhotoTV, mSendTV, mTakePhotoTV, mTalkToNameTV, mTitleBarRL,
          mVoiceDialog, mVoiceIconTV, mVoiceTV, viewRecord);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
