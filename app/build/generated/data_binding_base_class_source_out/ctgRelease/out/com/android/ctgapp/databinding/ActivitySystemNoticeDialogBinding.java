// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySystemNoticeDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button mCancelBTN;

  @NonNull
  public final Button mCheckBTN;

  @NonNull
  public final TextView mContantTV;

  @NonNull
  public final View mOutSide;

  @NonNull
  public final TextView mTitleTV;

  private ActivitySystemNoticeDialogBinding(@NonNull RelativeLayout rootView,
      @NonNull Button mCancelBTN, @NonNull Button mCheckBTN, @NonNull TextView mContantTV,
      @NonNull View mOutSide, @NonNull TextView mTitleTV) {
    this.rootView = rootView;
    this.mCancelBTN = mCancelBTN;
    this.mCheckBTN = mCheckBTN;
    this.mContantTV = mContantTV;
    this.mOutSide = mOutSide;
    this.mTitleTV = mTitleTV;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySystemNoticeDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySystemNoticeDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_system_notice_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySystemNoticeDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mCancelBTN;
      Button mCancelBTN = rootView.findViewById(id);
      if (mCancelBTN == null) {
        break missingId;
      }

      id = R.id.mCheckBTN;
      Button mCheckBTN = rootView.findViewById(id);
      if (mCheckBTN == null) {
        break missingId;
      }

      id = R.id.mContantTV;
      TextView mContantTV = rootView.findViewById(id);
      if (mContantTV == null) {
        break missingId;
      }

      id = R.id.mOutSide;
      View mOutSide = rootView.findViewById(id);
      if (mOutSide == null) {
        break missingId;
      }

      id = R.id.mTitleTV;
      TextView mTitleTV = rootView.findViewById(id);
      if (mTitleTV == null) {
        break missingId;
      }

      return new ActivitySystemNoticeDialogBinding((RelativeLayout) rootView, mCancelBTN, mCheckBTN,
          mContantTV, mOutSide, mTitleTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
