// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRechargeHistoryChildListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView mEvent;

  @NonNull
  public final CircleImageView mImageView;

  @NonNull
  public final TextView mMoney;

  @NonNull
  public final TextView mTime;

  private ItemRechargeHistoryChildListBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView mEvent, @NonNull CircleImageView mImageView, @NonNull TextView mMoney,
      @NonNull TextView mTime) {
    this.rootView = rootView;
    this.mEvent = mEvent;
    this.mImageView = mImageView;
    this.mMoney = mMoney;
    this.mTime = mTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRechargeHistoryChildListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRechargeHistoryChildListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_recharge_history_child_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRechargeHistoryChildListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mEvent;
      TextView mEvent = rootView.findViewById(id);
      if (mEvent == null) {
        break missingId;
      }

      id = R.id.mImageView;
      CircleImageView mImageView = rootView.findViewById(id);
      if (mImageView == null) {
        break missingId;
      }

      id = R.id.mMoney;
      TextView mMoney = rootView.findViewById(id);
      if (mMoney == null) {
        break missingId;
      }

      id = R.id.mTime;
      TextView mTime = rootView.findViewById(id);
      if (mTime == null) {
        break missingId;
      }

      return new ItemRechargeHistoryChildListBinding((RelativeLayout) rootView, mEvent, mImageView,
          mMoney, mTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
