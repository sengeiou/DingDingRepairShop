// Generated by view binder compiler. Do not edit!
package com.android.ctgapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.android.ctgapp.R;
import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChartOrderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView mBackIv;

  @NonNull
  public final RelativeLayout mBackground;

  @NonNull
  public final TextView mCompanyNameTV;

  @NonNull
  public final RecyclerView mOrderRV;

  @NonNull
  public final SmartRefreshLayout mRefresh;

  @NonNull
  public final TextView mTitleTv;

  private ActivityChartOrderBinding(@NonNull LinearLayout rootView, @NonNull ImageView mBackIv,
      @NonNull RelativeLayout mBackground, @NonNull TextView mCompanyNameTV,
      @NonNull RecyclerView mOrderRV, @NonNull SmartRefreshLayout mRefresh,
      @NonNull TextView mTitleTv) {
    this.rootView = rootView;
    this.mBackIv = mBackIv;
    this.mBackground = mBackground;
    this.mCompanyNameTV = mCompanyNameTV;
    this.mOrderRV = mOrderRV;
    this.mRefresh = mRefresh;
    this.mTitleTv = mTitleTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChartOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChartOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chart_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChartOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mBackIv;
      ImageView mBackIv = rootView.findViewById(id);
      if (mBackIv == null) {
        break missingId;
      }

      id = R.id.mBackground;
      RelativeLayout mBackground = rootView.findViewById(id);
      if (mBackground == null) {
        break missingId;
      }

      id = R.id.mCompanyNameTV;
      TextView mCompanyNameTV = rootView.findViewById(id);
      if (mCompanyNameTV == null) {
        break missingId;
      }

      id = R.id.mOrderRV;
      RecyclerView mOrderRV = rootView.findViewById(id);
      if (mOrderRV == null) {
        break missingId;
      }

      id = R.id.mRefresh;
      SmartRefreshLayout mRefresh = rootView.findViewById(id);
      if (mRefresh == null) {
        break missingId;
      }

      id = R.id.mTitleTv;
      TextView mTitleTv = rootView.findViewById(id);
      if (mTitleTv == null) {
        break missingId;
      }

      return new ActivityChartOrderBinding((LinearLayout) rootView, mBackIv, mBackground,
          mCompanyNameTV, mOrderRV, mRefresh, mTitleTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
